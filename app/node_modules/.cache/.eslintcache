[{"D:\\Projects\\Task-Manager\\app\\src\\index.tsx":"1","D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts":"2","D:\\Projects\\Task-Manager\\app\\src\\App.tsx":"3","D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx":"4","D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx":"5","D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx":"6","D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx":"7","D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx":"8","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx":"9","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx":"10","D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx":"11"},{"size":630,"mtime":1643034488597,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1643028830295,"results":"14","hashOfConfig":"13"},{"size":2732,"mtime":1643068780927,"results":"15","hashOfConfig":"13"},{"size":1950,"mtime":1643059093075,"results":"16","hashOfConfig":"13"},{"size":1258,"mtime":1643064873601,"results":"17","hashOfConfig":"13"},{"size":388,"mtime":1643028830284,"results":"18","hashOfConfig":"13"},{"size":2540,"mtime":1643068825622,"results":"19","hashOfConfig":"13"},{"size":575,"mtime":1643028830288,"results":"20","hashOfConfig":"13"},{"size":482,"mtime":1643035791396,"results":"21","hashOfConfig":"13"},{"size":805,"mtime":1643069203315,"results":"22","hashOfConfig":"13"},{"size":735,"mtime":1643069185945,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wo87nk",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Task-Manager\\app\\src\\index.tsx",[],["47","48"],"D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts",[],"D:\\Projects\\Task-Manager\\app\\src\\App.tsx",["49","50","51","52"],"D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx",["53"],"D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx",["54"],"D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx",["55","56","57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":19,"column":23,"nodeType":"66","messageId":"67","endLine":19,"endColumn":37},{"ruleId":"70","severity":1,"message":"71","line":34,"column":6,"nodeType":"72","endLine":34,"endColumn":32,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":31,"column":19,"nodeType":"75","endLine":37,"endColumn":10},{"ruleId":"76","severity":1,"message":"77","line":17,"column":58,"nodeType":"78","messageId":"79","endLine":17,"endColumn":60},{"ruleId":"76","severity":1,"message":"77","line":17,"column":21,"nodeType":"78","messageId":"79","endLine":17,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":20,"column":21,"nodeType":"78","messageId":"79","endLine":20,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":20,"column":38,"nodeType":"82","messageId":"83","endLine":20,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":20,"column":48,"nodeType":"78","messageId":"79","endLine":20,"endColumn":50},{"ruleId":"80","severity":1,"message":"81","line":20,"column":59,"nodeType":"82","messageId":"83","endLine":20,"endColumn":61},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Task' is defined but never used.","'setTaskForEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store.tasks'. Either include it or remove the dependency array.","ArrayExpression",["86"],"Assignments to the 'newTask' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [onOpenCreate, onOpenEdit, store.tasks]",{"range":"89","text":"90"},[1344,1370],"[onOpenCreate, onOpenEdit, store.tasks]"]