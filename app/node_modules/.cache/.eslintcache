[{"D:\\Projects\\Task-Manager\\app\\src\\index.tsx":"1","D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts":"2","D:\\Projects\\Task-Manager\\app\\src\\App.tsx":"3","D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx":"4","D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx":"5","D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx":"6","D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx":"7","D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx":"8","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx":"9","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx":"10","D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx":"11","D:\\Projects\\Task-Manager\\app\\src\\components\\error\\Error.tsx":"12","D:\\Projects\\Task-Manager\\app\\src\\components\\filter\\Filter.tsx":"13"},{"size":630,"mtime":1643034488597,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1643028830295,"results":"16","hashOfConfig":"15"},{"size":3622,"mtime":1643077583167,"results":"17","hashOfConfig":"15"},{"size":2263,"mtime":1643075269416,"results":"18","hashOfConfig":"15"},{"size":1258,"mtime":1643072347980,"results":"19","hashOfConfig":"15"},{"size":388,"mtime":1643028830284,"results":"20","hashOfConfig":"15"},{"size":3457,"mtime":1643074968037,"results":"21","hashOfConfig":"15"},{"size":575,"mtime":1643028830288,"results":"22","hashOfConfig":"15"},{"size":482,"mtime":1643035791396,"results":"23","hashOfConfig":"15"},{"size":882,"mtime":1643075717764,"results":"24","hashOfConfig":"15"},{"size":472,"mtime":1643072360037,"results":"25","hashOfConfig":"15"},{"size":257,"mtime":1643074693946,"results":"26","hashOfConfig":"15"},{"size":538,"mtime":1643077370398,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1wo87nk",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Task-Manager\\app\\src\\index.tsx",[],["55","56"],"D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts",[],"D:\\Projects\\Task-Manager\\app\\src\\App.tsx",["57","58"],"D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx",["59","60","61","62"],"D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx",["63"],"D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\error\\Error.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\filter\\Filter.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":43,"column":6,"nodeType":"74","endLine":43,"endColumn":49,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":33,"column":23,"nodeType":"77","endLine":39,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":85,"column":77,"nodeType":"80","messageId":"81","endLine":85,"endColumn":79},{"ruleId":"78","severity":1,"message":"79","line":86,"column":89,"nodeType":"80","messageId":"81","endLine":86,"endColumn":91},{"ruleId":"78","severity":1,"message":"79","line":87,"column":75,"nodeType":"80","messageId":"81","endLine":87,"endColumn":77},{"ruleId":"78","severity":1,"message":"79","line":18,"column":55,"nodeType":"80","messageId":"81","endLine":18,"endColumn":57},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'store.tasks' and 'store.users'. Either include them or remove the dependency array.","ArrayExpression",["84"],"Assignments to the 'newTask' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [onOpenCreate, onOpenEdit, store.tasks, store.users, userFilterValue]",{"range":"87","text":"88"},[1776,1819],"[onOpenCreate, onOpenEdit, store.tasks, store.users, userFilterValue]"]