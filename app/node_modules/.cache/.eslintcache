[{"D:\\Projects\\Task-Manager\\app\\src\\index.tsx":"1","D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts":"2","D:\\Projects\\Task-Manager\\app\\src\\App.tsx":"3","D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx":"4","D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx":"5","D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx":"6","D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx":"7","D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx":"8","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx":"9","D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx":"10","D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx":"11"},{"size":630,"mtime":1643034488597,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1643028830295,"results":"14","hashOfConfig":"13"},{"size":2582,"mtime":1643071396879,"results":"15","hashOfConfig":"13"},{"size":1950,"mtime":1643059093075,"results":"16","hashOfConfig":"13"},{"size":1258,"mtime":1643069453046,"results":"17","hashOfConfig":"13"},{"size":388,"mtime":1643028830284,"results":"18","hashOfConfig":"13"},{"size":3153,"mtime":1643072037988,"results":"19","hashOfConfig":"13"},{"size":575,"mtime":1643028830288,"results":"20","hashOfConfig":"13"},{"size":482,"mtime":1643035791396,"results":"21","hashOfConfig":"13"},{"size":840,"mtime":1643070853023,"results":"22","hashOfConfig":"13"},{"size":485,"mtime":1643072142444,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wo87nk",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Task-Manager\\app\\src\\index.tsx",[],["47","48"],"D:\\Projects\\Task-Manager\\app\\src\\reportWebVitals.ts",[],"D:\\Projects\\Task-Manager\\app\\src\\App.tsx",["49","50","51","52"],"D:\\Projects\\Task-Manager\\app\\src\\components\\new-task\\NewTaskModal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\task-wrapper\\TaskWrapper.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\button\\Button.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\edit-task\\EditTaskModal.tsx",["53","54","55","56"],"D:\\Projects\\Task-Manager\\app\\src\\components\\modal\\Modal.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\StoreContext.tsx",[],"D:\\Projects\\Task-Manager\\app\\src\\components\\common\\Store.tsx",["57"],"D:\\Projects\\Task-Manager\\app\\src\\components\\task\\Task.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":21},{"ruleId":"62","severity":1,"message":"67","line":18,"column":23,"nodeType":"64","messageId":"65","endLine":18,"endColumn":37},{"ruleId":"68","severity":1,"message":"69","line":32,"column":6,"nodeType":"70","endLine":32,"endColumn":32,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":31,"column":23,"nodeType":"73","endLine":37,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":72,"column":77,"nodeType":"76","messageId":"77","endLine":72,"endColumn":79},{"ruleId":"74","severity":1,"message":"75","line":73,"column":89,"nodeType":"76","messageId":"77","endLine":73,"endColumn":91},{"ruleId":"74","severity":1,"message":"75","line":74,"column":75,"nodeType":"76","messageId":"77","endLine":74,"endColumn":77},{"ruleId":"74","severity":1,"message":"75","line":17,"column":58,"nodeType":"76","messageId":"77","endLine":17,"endColumn":60},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'taskForEdit' is assigned a value but never used.","'setTaskForEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store.tasks'. Either include it or remove the dependency array.","ArrayExpression",["80"],"Assignments to the 'newTask' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [onOpenCreate, onOpenEdit, store.tasks]",{"range":"83","text":"84"},[1290,1316],"[onOpenCreate, onOpenEdit, store.tasks]"]