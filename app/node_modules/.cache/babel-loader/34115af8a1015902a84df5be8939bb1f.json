{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Task-Manager\\\\app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styles from './App.module.scss';\nimport { Button } from './components/button/Button';\nimport { TaskWrapper } from './components/task-wrapper/TaskWrapper';\nimport { NewTaskModal } from './components/new-task/NewTaskModal';\nimport { EditTaskModal } from './components/edit-task/EditTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [onOpenCreate, setOnOpenCreate] = useState(false);\n  const [onOpenEdit, setOnOpenEdit] = useState(false);\n\n  const test = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"testove\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 16\n  }, this); // const actions = <Button onNewTask={() => {setOnOpenCreate(false);}} title={'Add task'}/>\n\n\n  const users = ['Ivan', 'Georgi', 'Peter'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: !onOpenCreate && !onOpenEdit ? styles.wrapper : styles['wrapper-blur'],\n      children: [/*#__PURE__*/_jsxDEV(TaskWrapper, {\n        title: \"To Do\",\n        content: {\n          'test': 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskWrapper, {\n        title: \"In progress\",\n        content: {\n          'test': 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskWrapper, {\n        title: \"Done\",\n        content: {\n          'test': 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onAction: () => {\n          setOnOpenCreate(true);\n        },\n        title: 'New task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modal,\n      children: [onOpenCreate && /*#__PURE__*/_jsxDEV(NewTaskModal, {\n        onAddTask: () => {\n          console.log('add');\n        },\n        onClose: () => {\n          setOnOpenCreate(false);\n        },\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), onOpenEdit && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n        onAddTask: () => {\n          console.log('add');\n        },\n        onClose: () => {\n          setOnOpenEdit(false);\n        },\n        users: users,\n        titleValue: 'Header',\n        descriptionValue: 'description'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/lxeGPwjjTLi82kiRUNLJ8rUd4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Projects/Task-Manager/app/src/App.tsx"],"names":["useState","styles","Button","TaskWrapper","NewTaskModal","EditTaskModal","App","onOpenCreate","setOnOpenCreate","onOpenEdit","setOnOpenEdit","test","users","wrapper","modal","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,aAAT,QAA8B,sCAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMW,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb,CAHa,CAIb;;;AACA,QAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAd;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,CAACL,YAAD,IAAiB,CAACE,UAAlB,GAA+BR,MAAM,CAACY,OAAtC,GAAgDZ,MAAM,CAAC,cAAD,CAAtE;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,OAApB;AAA6B,QAAA,OAAO,EAAE;AAAC,kBAAS;AAAV;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,aAApB;AAAmC,QAAA,OAAO,EAAE;AAAC,kBAAS;AAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,MAApB;AAA4B,QAAA,OAAO,EAAE;AAAC,kBAAS;AAAV;AAArC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,MAAM;AAACO,UAAAA,eAAe,CAAC,IAAD,CAAf;AAAuB,SAAhD;AAAkD,QAAA,KAAK,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACa,KAAvB;AAAA,iBACGP,YAAY,iBACX,QAAC,YAAD;AAAc,QAAA,SAAS,EAAE,MAAM;AAACQ,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAoB,SAApD;AACA,QAAA,OAAO,EAAE,MAAM;AAACR,UAAAA,eAAe,CAAC,KAAD,CAAf;AAAuB,SADvC;AAEA,QAAA,KAAK,EAAEI;AAFP;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOGH,UAAU,iBACX,QAAC,aAAD;AAAe,QAAA,SAAS,EAAE,MAAM;AAACM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAAoB,SAArD;AACE,QAAA,OAAO,EAAE,MAAM;AAACN,UAAAA,aAAa,CAAC,KAAD,CAAb;AAAqB,SADvC;AAEE,QAAA,KAAK,EAAEE,KAFT;AAGE,QAAA,UAAU,EAAE,QAHd;AAIE,QAAA,gBAAgB,EAAE;AAJpB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAhCQN,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\r\nimport styles from './App.module.scss'\r\nimport { Modal } from './components/modal/Modal';\r\nimport { Button } from './components/button/Button';\r\nimport { TaskWrapper } from './components/task-wrapper/TaskWrapper';\r\nimport { NewTaskModal } from './components/new-task/NewTaskModal';\r\nimport { EditTaskModal } from './components/edit-task/EditTaskModal';\r\n\r\nfunction App() {\r\n  const [onOpenCreate, setOnOpenCreate] = useState(false);\r\n  const [onOpenEdit, setOnOpenEdit] = useState(false);\r\n  const test = <h1>testove</h1>\r\n  // const actions = <Button onNewTask={() => {setOnOpenCreate(false);}} title={'Add task'}/>\r\n  const users = ['Ivan', 'Georgi', 'Peter']\r\n  return (\r\n    <div>\r\n      <div className={!onOpenCreate && !onOpenEdit ? styles.wrapper : styles['wrapper-blur']}>\r\n          <TaskWrapper title={\"To Do\"} content={{'test' : 1}}/>\r\n          <TaskWrapper title={\"In progress\"} content={{'test' : 1}}/>\r\n          <TaskWrapper title={\"Done\"} content={{'test' : 1}}/>\r\n          <Button onAction={() => {setOnOpenCreate(true);}} title={'New task'}/>\r\n      </div>\r\n      <div className={styles.modal}>\r\n        {onOpenCreate &&\r\n          <NewTaskModal onAddTask={() => {console.log('add');}}\r\n          onClose={() => {setOnOpenCreate(false)}}\r\n          users={users}\r\n          />\r\n        }\r\n        {onOpenEdit &&\r\n        <EditTaskModal onAddTask={() => {console.log('add');}}\r\n          onClose={() => {setOnOpenEdit(false)}}\r\n          users={users}\r\n          titleValue={'Header'}\r\n          descriptionValue={'description'}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}